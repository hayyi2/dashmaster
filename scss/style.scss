@import "bootstrap/functions";
@import "variables";
@import "bootstrap/mixins";

$font-color: inherit !default;
$navbar-font-size: 1rem;
$avatar-width: 2.25rem;
$avatar-bg: rgba(0,0,0,0.1);
$avatar-bg-hover: rgba(0,0,0,0.2);
/* Sidenav */
$sidenav-width: 250px;
$card-margin-bottom: 1rem;
$sidenav-item-hover-bg: rgba(0, 0, 0, 0.1);
$border-width-sidenav: 3px;

/* footer */
$footer-height: 2.25rem;


$skin: (
	"dark": 	$gray-900,
	) !default;
/* defalt skin*/
$skin: map-merge((
	"blue": 	$blue, 
	"indigo": 	$indigo, 
	"purple": 	$purple, 
	"pink": 	$pink, 
	"red": 		$red, 
	"orange": 	$orange, 
	"yellow": 	$yellow, 
	"green": 	$green, 
	"teal": 	$teal, 
	"cyan": 	$cyan, 
	),
$skin
);
$skin-lighter: (
	"dark": 	lighten($gray-900, 75%),
	) !default;
/* defalt skin*/
$skin-lighter: map-merge((
	"blue": 	lighten($blue, 45%), 
	"indigo": 	lighten($indigo, 40%), 
	"purple": 	lighten($purple, 45%), 
	"pink": 	lighten($pink, 37%), 
	"red": 		lighten($red, 40%), 
	"orange": 	lighten($orange, 40%), 
	"yellow": 	lighten($yellow, 40%), 
	"green": 	lighten($green, 50%), 
	"teal": 	lighten($teal, 45%), 
	"cyan": 	lighten($cyan, 50%), 
	),
$skin-lighter
);

$default-skin: 'cyan';

$min-media: map-get($container-max-widths, 'sm');

@each $key, $value in $container-max-widths	{
	.show-#{$key}{
		display: none;
	}
	@media (min-width: #{$value}) {
		.show-#{$key}{
			display: contents;
		}
	}
}

@each $key, $value in $container-max-widths	{
	.max-#{$key}-container{
		max-width: $value;
		&:not(.ml-auto):not(.mr-auto){
			margin-left: auto;
			margin-right: auto;
		}
	}
}

.hide{
	display: none;
}
@mixin sidenav() {
	font-size: $font-size-base;
	position: fixed;
	top: $navbar-height;
	width: $sidenav-width;
	left: 0;
	bottom: 0;
	background: $white;
	border-right: $border-width solid $border-color;
	flex-direction: column;
	padding-top: .5rem;
	padding-bottom: .5rem;
	overflow-y: auto;
	transform: translateX(-1 * $sidenav-width);
	transition: all 0.2s;
	.nav-item{
		&:last-child:not(.show){
			padding-bottom: .5rem;
		}
		&:last-child.show{
			.dropdown-menu{
				padding-bottom: .5rem;
			}
		}
		&.active{
			> .nav-link{
				border-left: $border-width-sidenav solid map-get($skin, $default-skin);
				padding: .5rem .5rem .5rem calc(1rem - #{$border-width-sidenav});
				background: map-get($skin-lighter, $default-skin);
			}
		}
		.nav-link{
			color: $font-color;
			padding-left: 1rem;
			padding-right: 1rem;
			padding-top: .5rem;
			padding-bottom: .5rem;
			&.active{
				background: map-get($skin-lighter, $default-skin);
			}
		}
		&:not(.active){
			.nav-link:hover:not(.active){
				background-color: $sidenav-item-hover-bg !important;
			}
		}
		.badge{
			float: right;
			margin-top: .2rem;
			font-size: $badge-font-size;
			padding: $badge-padding-y $badge-padding-x;
		}
		&.show{
			.dropdown-menu{
				display: block;
			}
		}
		.dropdown-menu{
			position: static;
			width: 100%;
			border: none;
			border-radius: 0;
			padding: 1px 0;
			margin-top: 0;
			.dropdown-item{
				padding-right: 1rem;
				padding-left: 1rem + .5rem + 1.25rem;
				padding-top: .25rem;
				padding-bottom: .25rem;
				&:first-child, &:last-child{
					border-radius: 0;
				}
				&:hover:not(.active), &:focus:not(.active){
					background: $sidenav-item-hover-bg !important;
					color: $font-color;
				}
				&.active{
					border-left: $border-width-sidenav solid map-get($skin, $default-skin);
					background: map-get($skin-lighter, $default-skin);
					padding: .25rem 1rem .25rem calc(1rem + .5rem + 1.25rem - #{$border-width-sidenav});
					color: $font-color;
				}
			}
		}
	}
	.divider{
		height: 0;
		margin: .5rem 0;
		overflow: hidden;
		border-top: 1px solid #e9ecef;
	}
}
body{
	background: $gray-100;
	padding-top: $navbar-height;
	transition: all 0.2s;
	> header{
		.navbar{
			font-size: $navbar-font-size;
			background: map-get($skin, $default-skin);
			display: flex;
			flex-flow: row nowrap;
			justify-content: flex-start;
			.collapsed{
				display: flex;
			}
			.dropdown-toggle::after{
				display: none;
			}
			.navbar-nav{
				display: flex;
				flex-flow: row nowrap;
				flex-direction: row;
				justify-content: flex-start;
				.nav-link{
					display: block;
					padding-right: $navbar-nav-link-padding-x;
					padding-left: $navbar-nav-link-padding-x;
				}
			}
			&.navbar-expand{
				@each $breakpoint in map-keys($grid-breakpoints) {
					$next: breakpoint-next($breakpoint, $grid-breakpoints);
					$infix: breakpoint-infix($next, $grid-breakpoints);

					&#{$infix} {
						@include media-breakpoint-down($breakpoint) {
							.navbar-nav{
								&.mainnav{
									@include sidenav();
								}
							}
						}
						@include media-breakpoint-up($next) {
						}
					}
				}
			}
			.navbar-toggler{
				border: none;
				margin-right: ($spacer / 2);
				font-size: $h4-font-size;
				padding-left: .25rem;
			}
			.navbar-nav{
				.nav-item{
					.dropdown-menu{
						position: absolute;
						.dropdown-item{
							&:first-child, &:last-child{
								border-radius: 0;
							}
							&.active{
								border-left: $border-width-sidenav solid map-get($skin, $default-skin);
								background: map-get($skin-lighter, $default-skin);
								padding: $dropdown-item-padding-y $dropdown-item-padding-x $dropdown-item-padding-y calc(#{$dropdown-item-padding-x} - #{$border-width-sidenav});
								color: $font-color;
							}
						}
					}
				}
				&.mainnav{
					.nav-item{
						.nav-link{
							i{
								margin-right: .5rem;
								width: 1.25rem;
								text-align: center;
							}
						}
						.dropdown-item{
							i{
								margin-right: .25rem;
								width: 1.25rem;
								text-align: center;
							}
						}
					}
				}
				.nav-item{
					.nav-link{
						.badge{
							font-size: 10px;
							padding: .1rem .25rem;
							vertical-align: top;
							margin-top: .1rem;
						}
						.avatar{
							float: right;
							width: $avatar-width;
							height: $avatar-width;
							background: $avatar-bg;
							margin-top: -1 * (($avatar-width - 1rem * $line-height-base) / 2);
							margin-bottom: -1 * (($avatar-width - 1rem * $line-height-base) / 2);
							border-radius: 50%;
							margin-left: .5rem;
							vertical-align: top;
							line-height: $avatar-width;
							text-align: center;
							text-transform: uppercase;
							img{
								max-width: 100%;
								max-height: 100%;
								border-radius: 50%;
								vertical-align: top;
							}
						}
						&:hover, &:focus{
							.avatar{
								background: $avatar-bg-hover;
							}
						}
					}
					&.dropdown{
						.dropdown-notivication{
							line-height: 1;
							.dropdown-item{
								padding-top: .5rem;
								padding-bottom: .5rem;
								i{
									width: 1rem;
									margin-right: .25rem;
								}
							}
						}
					}
				}
			}
		}
	}
	.body{
		nav[aria-label=breadcrumb]{
			background: $gray-200;
			.breadcrumb{
				margin-bottom: 0;
			}
		}
		img{
			max-width: 100%;
			height: auto;
		}
		.custom-select{
			-webkit-appearance: none;
			-moz-appearance: none;
			appearance: none;
		}
		.bootstrap-select{
			.btn.dropdown-toggle.btn-light{
				background: $white;
				border: $border-width solid $border-color;
			}
			ul.dropdown-menu{
				li{
					a{
						border-radius: 0;
					}
				}
			}
			li.no-results{
				margin: 0;
				padding-left: .5rem;
				padding-right: .5rem;
			}
		}
		.footer{
			background: $gray-200;
			padding: (($footer-height - $font-size-base * $line-height-base) / 2) 0;
			div{
				padding-left: 1rem;
				padding-right: 1rem;
			}
		}
	}

	.timeline{
		margin-top: 1rem;
		position: relative;
		margin-bottom: 1rem;
		&:before{
			content: "";
			position: absolute;
			height: 100%;
			left: 25px;
			border-left: 1px solid $border-color;
			z-index: 0;
		}
		.timeline-date{
			position: relative;
			margin-bottom: 1rem;
			span{
				background: $secondary;
				color: white;
				padding: .1rem 1rem;
				z-index: 1;
				border-radius: $border-radius;
			}
		}
		.timeline-item{
			clear: both;
			&:first-child{
				padding-top: 1rem;
			}
			&:last-child{
				padding-bottom: 1rem;
			}
			.timeline-icon{
				width: 50px;
				height: 50px;
				text-align: center;
				border-radius: 50%;
				margin-right: 1rem;
				z-index: 1;
				background: $secondary;
				color: white;
				i{
					line-height: 50px;
				}
			}
			.timeline-card{
				position: relative;
				&:before{
					content: "";
					position: absolute;
					width: 15px;
					height: 15px;
					background: white;
					transform: translateX(-50%) translateY(-50%) rotate(-45deg);
					top: 25px;
					border-top: 1px solid $border-color;
					border-left: 1px solid $border-color;
				}
			}
		}
	}
	.table{
		tr{
			td, th{
				&:first-child{
					padding-left: 1rem;
				}
				&:last-child{
					padding-right: 1rem;
				}
			}
		}
	}
	.content{
		padding: .75rem 1rem;
		.content-header{
			margin-bottom: .5rem;
			.content-title{
				padding-top: .5rem;
				padding-bottom: .5rem;
			}
		}
		.content-body{
		}
	}
	.card{
		margin-bottom: $card-margin-bottom;
		.alert{
			border-radius: 0;
			margin-bottom: 0;
		}
		.card-header{
			@media (min-width: $min-media) {
				&:not(.d-flex):not(.d-sm-flex):not(.d-md-flex):not(.d-lg-flex){
					display: flex !important;
					justify-content: space-between !important;
					align-items: center !important;
				}
			}
			.card-title{
				margin-top: .125rem;
				margin-bottom: .125rem;
			}
		}
		.card-body{
			p:last-child{
				margin-bottom: 0;
			}
			> .form-group{
				&:first-child{
					margin-top: .5rem;
				}
				&:last-child{
					margin-bottom: .5rem;
				}
			}
		}
		&.card-count{
			background: $border-color;
			.card-header{
				padding-top: 1rem;
				padding-bottom: 1rem;
				background: transparent;
				color: $primary;
				border-radius: $border-radius;
			}
			a{
				&:hover{
					text-decoration: none;
				}
			}
			@each $key, $value in $theme-colors {
				&.card-#{$key}{
					border-color: $value;
					background: $value;
					.card-header{
						border-color: $value;
						color: $white;
					}
					.card-footer{
						border-color: $value;
					}
					a{
						color: $value;
						&:hover{
							color: darken($value, 15%)
						}
					}
				}
			}
		}
		&.card-count-outline{
			border-color: $primary;
			.card-header{
				padding-top: 1rem;
				padding-bottom: 1rem;
				color: $primary;
				border-width: 0px;
				border-radius: $border-radius;
			}
			a{
				&:hover{
					text-decoration: none;
					color: darken($primary, 15%)
				}
			}
			@each $key, $value in $theme-colors {
				&.card-#{$key}{
					border-color: $value;
					.card-header{
						color: $value;
					}
					a{
						color: $value;
						&:hover{
							color: darken($value, 15%)
						}
					}
				}
			}
		}
		.table{
			margin-bottom: 0;
		}
		> .table{
			thead{
				tr{
					th{
						border-top: 0;
					}
				}
			}
		}
		.dataTables_wrapper{
			padding-top: .75rem;
			padding-bottom: .75rem;
			&.container-fluid{
				.row{
					&:first-child, &:last-child{
						padding-left: 1rem;
						padding-right: 1rem;
					}
				}
			}
		}
	}
	.dataTables_wrapper{
		&.container-fluid{
			padding-right: 0;
			padding-left: 0;
		}
		table.dataTable.table-sm .sorting::before, 
		table.dataTable.table-sm .sorting_asc::before, 
		table.dataTable.table-sm .sorting_desc::before, 
		table.dataTable.table-sm .sorting::after, 
		table.dataTable.table-sm .sorting_asc::after, 
		table.dataTable.table-sm .sorting_desc::after{
			margin-top: .1rem;
		}
	}
	.table{
		&.table-sm{
			thead{
				tr{
					th{
						padding-top: .5rem;
						padding-bottom: .5rem;
					}
				}
			}
		}
	}
	&.active-sidenav{
		> header{
			.navbar{
				&.navbar-expand{
					@each $breakpoint in map-keys($grid-breakpoints) {
						$next: breakpoint-next($breakpoint, $grid-breakpoints);
						$infix: breakpoint-infix($next, $grid-breakpoints);

						&#{$infix} {
							@include media-breakpoint-down($breakpoint) {
								.navbar-nav{
									&.mainnav{
										transform: translateX(0);
									}
								}
							}
						}
					}
				}
			}
		}
		&.topnav{
			@each $breakpoint in map-keys($grid-breakpoints) {
				$next: breakpoint-next($breakpoint, $grid-breakpoints);
				$infix: breakpoint-infix($next, $grid-breakpoints);

				&#{$infix}{
					@include media-breakpoint-down($breakpoint) {
						@media (min-width: $min-media) {
							.body{
								margin-left: $sidenav-width;
							}
						}
					}
				}
			}
		}
	}
	&.sidenav{
		> header{
			.navbar{
				.navbar-toggler{
					display: block;
				}
				.navbar-nav{
					&.mainnav{
						@include sidenav();
					}
				}
			}
		}
		&.active-sidenav{
			> header{
				.navbar{
					.mainnav{
						transform: translateX(0);
					}
				}
			}
			.body{
				@media (min-width: $min-media) {
					margin-left: $sidenav-width;
				}
			}
		}
	}
}
@each $key, $value in $skin	{
	body.skin-#{$key}{
		> header{
			.navbar{
				background: $value;
				&.navbar-expand{
					@each $breakpoint in map-keys($grid-breakpoints) {
						$next: breakpoint-next($breakpoint, $grid-breakpoints);
						$infix: breakpoint-infix($next, $grid-breakpoints);

						&#{$infix} {
							@include media-breakpoint-down($breakpoint) {
								.navbar-nav{
									&.mainnav{
										.nav-item{
											&.active{
												> .nav-link{
													border-left: $border-width-sidenav solid $value;
													background: map-get($skin-lighter, $key);
												}
											}
											.nav-link{
												&.active{
													background: map-get($skin-lighter, $key);
												}
											}
										}
										.dropdown-menu{
											.dropdown-item{
												&.active{
													border-left: $border-width-sidenav solid $value;
													background: map-get($skin-lighter, $key);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				.navbar-nav{
					.nav-item{
						.dropdown-menu{
							.dropdown-item{
								&.active{
									border-left: $border-width-sidenav solid $value;
									background: map-get($skin-lighter, $key);
								}
							}
						}
					}
					&.mainnav{
						.dropdown-menu{
							.dropdown-item{
								&.active{
									border-left: $border-width-sidenav solid $value;
									background: map-get($skin-lighter, $key);
								}
							}
						}
					}
				}
			}
		}
		&.sidenav{
			> header{
				.navbar{
					background: $value;
					.navbar-nav{
						&.mainnav{
							.nav-item{
								&.active{
									> .nav-link{
										border-left: $border-width-sidenav solid $value;
										background: map-get($skin-lighter, $key);
									}
								}
								.nav-link{
									&.active{
										background: map-get($skin-lighter, $key);
									}
								}
							}
							.dropdown-menu{
								.dropdown-item{
									&.active{
										border-left: $border-width-sidenav solid $value;
										background: map-get($skin-lighter, $key);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}